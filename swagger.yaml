openapi: 3.0.0
info:
  title: Blog API
  description: API для работы с постами (CRUD + пагинация)
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Локальный сервер

paths:
  /posts:
    get:
      summary: Получить список постов
      parameters:
        - name: page
          in: query
          description: Номер страницы
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Количество постов на странице
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'

    post:
      summary: Создать новый пост
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '201':
          description: Пост создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'

  /posts/{id}:
    get:
      summary: Получить пост по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Найденный пост
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '404':
          description: Пост не найден

    put:
      summary: Обновить пост по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: Пост обновлен

    delete:
      summary: Удалить пост по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Пост удален

    /reviews:
    get:
      summary: Получить все отзывы
      description: Возвращает список всех отзывов.
      operationId: getReviews
      responses:
        '200':
          description: Список отзывов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'

    post:
      summary: Добавить новый отзыв
      description: Создает новый отзыв о сервисе.
      operationId: createReview
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
      responses:
        '201':
          description: Отзыв успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'

  /reviews/{id}:
    get:
      summary: Получить отзыв по ID
      description: Возвращает отзыв по указанному ID.
      operationId: getReviewById
      parameters:
        - name: id
          in: path
          required: true
          description: ID отзыва
          schema:
            type: string
      responses:
        '200':
          description: Отзыв найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Отзыв не найден

    put:
      summary: Обновить отзыв
      description: Обновляет информацию о существующем отзыве.
      operationId: updateReview
      parameters:
        - name: id
          in: path
          required: true
          description: ID отзыва
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
      responses:
        '200':
          description: Отзыв обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Отзыв не найден

    delete:
      summary: Удалить отзыв
      description: Удаляет отзыв по указанному ID.
      operationId: deleteReview
      parameters:
        - name: id
          in: path
          required: true
          description: ID отзыва
          schema:
            type: string
      responses:
        '204':
          description: Отзыв удален
        '404':
          description: Отзыв не найден

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
          example: "1"
        title:
          type: string
          example: "Мой первый пост"
        content:
          type: string
          example: "Содержимое поста"
        createdAt:
          type: string
          format: date-time
    
    PostInput:
      type: object
      properties:
        title:
          type: string
        content:
          type: string

     Review:
      type: object
      properties:
        id:
          type: string
          example: "12345"
        rating:
          type: integer
          description: Рейтинг отзыва (от 1 до 5)
          example: 4
        short_description:
          type: string
          description: Краткое описание услуги, на которую оставлен отзыв
          example: "Отличный сервис!"
        full_description:
          type: string
          description: Полное описание отзыва
          example: "Сервис был быстрым и качественным. Очень доволен!"
        created_at:
          type: string
          format: date-time
          description: Дата создания отзыва
          example: "2025-02-11T10:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Дата последнего обновления отзыва
          example: "2025-02-11T11:00:00Z"
        user:
          type: object
          properties:
            id:
              type: string
              example: "user_123"
            avatar:
              type: string
              description: URL аватарки пользователя
              example: "https://example.com/avatar.png"
            first_name:
              type: string
              description: Имя пользователя
              example: "Иван"
            last_name:
              type: string
              description: Фамилия пользователя
              example: "Иванов"
            nickname:
              type: string
              description: Никнейм пользователя
              example: "ivankov"
    
    ReviewCreate:
      allOf:
        - $ref: '#/components/schemas/Review'
        - properties:
            id:
              type: string
              readOnly: true
    ReviewUpdate:
      allOf:
        - $ref: '#/components/schemas/Review'
        - properties:
            created_at:
              type: string
              readOnly: true
            updated_at:
              type: string
              readOnly: true